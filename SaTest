function Send-FileAndCreateContainerWithManagedIdentity {
    param (
        [string]$StorageAccountName,
        [string]$FileLocalPath,
        [string]$ContainerName
    )

    # Get the User Managed Identity access token
    $accessToken = Get-ManagedIdentityAccessToken -ResourceId "https://storage.azure.com/"

    if (-not $accessToken) {
        Write-Host "Error: Unable to get access token for User Managed Identity."
        return
    }

    # Create the container if it doesn't exist
    Create-StorageContainerIfNotExists -StorageAccountName $StorageAccountName -ContainerName $ContainerName -AccessToken $accessToken

    # Upload the file to the container
    Upload-FileToStorageContainer -StorageAccountName $StorageAccountName -ContainerName $ContainerName -BlobName (Split-Path $FileLocalPath -Leaf) -LocalFilePath $FileLocalPath -AccessToken $accessToken

    Write-Host "File '$FileLocalPath' sent to container '$ContainerName' in Storage Account '$StorageAccountName'."
}

function Get-ManagedIdentityAccessToken {
    param (
        [string]$ResourceId
    )

    # Define the identity endpoint
    $identityEndpoint = "http://169.254.169.254/metadata/identity/oauth2/token"

    try {
        # Create a JSON payload for the HTTP request
        $payload = @{
            resource = $ResourceId
        }
        $body = $payload | ConvertTo-Json

        # Make the HTTP request to get the access token
        $response = Invoke-RestMethod -Uri $identityEndpoint -Headers @{ "Metadata" = "true" } -Method POST -Body $body

        $accessToken = $response.access_token
        return $accessToken
    }
    catch {
        Write-Host "Error occurred while obtaining access token: $_"
        return $null
    }
}

# ... (rest of the functions remain the same)

# Parameters
$StorageAccountName = "YOUR_STORAGE_ACCOUNT_NAME"
$FileLocalPath = "LOCAL_FILE_PATH.txt"
$ContainerName = "YOUR_CONTAINER_NAME"

Send-FileAndCreateContainerWithManagedIdentity -StorageAccountName $StorageAccountName -FileLocalPath $FileLocalPath -ContainerName $ContainerName
